{"version":3,"sources":["Images/Santa.jpg","components/Navbar/index.js","components/Jumbotron/index.js","components/Bio/index.js","components/gifComponents/dancingSanta.js","components/gifComponents/lightStringOne.js","components/gifComponents/winkingSanta.js","components/gifComponents/shakingBellsOne.js","components/gifComponents/stockingOne.js","components/Reviewgallery/index.js","pages/Main.js","pages/Schedule.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","href","data-target","id","class","Jumbotron","Bio","src","santaPic","alt","React","require","GifPlayer","DancingSanta","gif","still","LightStringOne","WinkingSanta","ShakingBellsOne","StockingOne","Reviewgallery","Main","Schedule","Component","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uIAAAA,EAAOC,QAAU,IAA0B,mC,sKCwD5BC,EAtDA,WACP,OACI,yBAAKC,UAAU,yBACzB,yBAAKA,UAAU,UACb,uBAAGA,UAAU,cAAcC,KAAK,KAC9B,uBAAGD,UAAU,sBAEf,yBAAKA,UAAU,uBAAuBE,cAAY,qCAIpD,yBAAKC,GAAG,kCAAkCH,UAAU,eAClD,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,yCACb,uBAAGA,UAAU,cAAcC,KAAK,kDAAhC,QAGA,yBAAKD,UAAU,4BACb,uBAAGA,UAAU,cAAcC,KAAK,kDAAhC,eAON,yBAAKD,UAAU,cACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,oBACb,uBAAGA,UAAU,WACX,uBAAGA,UAAU,sBAAsBC,KAAK,6CACpC,0BAAMD,UAAU,QACZ,uBAAGA,UAAU,4BAEnB,4CAKJ,uBAAGA,UAAU,WACX,uBAAGA,UAAU,oBAAoBC,KAAK,IACpC,0BAAMD,UAAU,QAChB,uBAAGI,MAAM,uBAET,yDC1BCC,EAjBG,WACd,OACI,6BAASL,UAAU,6BACnB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,gBAGA,wBAAIA,UAAU,YAAd,uB,iBCeGM,EAtBH,WACR,OACJ,6BAASN,UAAU,2BACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aAEX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,UACX,yBAAKO,IAAKC,IAAUC,IAAI,qBAD5B,gBAIA,yBAAKT,UAAU,UAAf,iBCdRU,EAAQC,EAAQ,GAEhBC,GADWD,EAAQ,GACPA,EAAQ,IAcPE,EATI,WACjB,OACI,gBAACD,EAAD,CACEE,IANE,6DAOFC,MANI,kECLVL,EAAQC,EAAQ,GAEhBC,GADWD,EAAQ,GACPA,EAAQ,IAcPK,EATM,WACnB,OACI,gBAAC,EAAD,CACEF,IANE,6DAOFC,MANI,kECLVL,EAAQC,EAAQ,GAEhBC,GADWD,EAAQ,GACPA,EAAQ,IAcPM,EATI,WACjB,OACI,gBAAC,EAAD,CACEH,IANE,6DAOFC,MANI,kECLVL,EAAQC,EAAQ,GAEhBC,GADWD,EAAQ,GACPA,EAAQ,IAcPO,EATO,WACpB,OACI,gBAAC,EAAD,CACEJ,IANE,6DAOFC,MANI,kECLVL,EAAQC,EAAQ,GAEhBC,GADWD,EAAQ,GACPA,EAAQ,IAcPQ,EATG,WAChB,OACI,gBAAC,EAAD,CACEL,IANE,6DAOFC,MANI,kECuDCK,EArDO,WAClB,OACJ,6BAASpB,UAAU,yBACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,aAEnB,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,8BACb,6BAASA,UAAU,yCACjB,kBAAC,EAAD,OAEF,6BAASA,UAAU,yCACjB,uBAAGA,UAAU,SAAb,YACA,uBAAGA,UAAU,YAAb,iBAGJ,yBAAKA,UAAU,kBACb,6BAASA,UAAU,sCACjB,uBAAGA,UAAU,SAAb,eACA,uBAAGA,UAAU,YAAb,iBACA,4BAAQA,UAAU,iBAChB,kBAAC,EAAD,UAKR,yBAAKA,UAAU,kBACb,6BAASA,UAAU,wCACjB,kBAAC,EAAD,MACA,kBAAC,EAAD,SAIN,yBAAKA,UAAU,kBACb,6BAASA,UAAU,yCACjB,yBAAKA,UAAU,WACb,uBAAGA,UAAU,SAAb,aACA,uBAAGA,UAAU,YAAb,0BACA,yBAAKA,UAAU,WACb,kBAAC,EAAD,eC/BKqB,EAXF,WACL,OACI,6BACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCGC,E,uKARP,OACI,6BACI,kBAAC,EAAD,W,GAJOZ,IAAMa,WCcdC,E,uKATX,OACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWN,IACjC,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,YAAYC,UAAWL,S,GAL7BZ,IAAMa,WCMJK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.ca289213.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Santa.97b2117d.jpg\";","import React from \"react\";\n\nconst Navbar = () => {\n        return (\n            <nav className=\"navbar is-transparent\">\n  <div className=\"navbar\">\n    <a className=\"navbar-item\" href=\"/\">\n      <i className=\"fas fa-sleigh 3x\"></i>\n    </a>\n    <div className=\"navbar-burger burger\" data-target=\"navbarExampleTransparentExample\">\n    </div>\n  </div>\n\n  <div id=\"navbarExampleTransparentExample\" className=\"navbar-menu\">\n    <div className=\"navbar-start\">\n      <div className=\"navbar-item has-dropdown is-hoverable\">\n        <a className=\"navbar-link\" href=\"https://bulma.io/documentation/overview/start/\">\n          Docs\n        </a>\n        <div className=\"navbar-dropdown is-boxed\">\n          <a className=\"navbar-item\" href=\"https://bulma.io/documentation/overview/start/\">\n            Overview\n          </a>\n        </div>\n      </div>\n    </div>\n\n    <div className=\"navbar-end\">\n      <div className=\"navbar-item\">\n        <div className=\"field is-grouped\">\n          <p className=\"control\">\n            <a className=\"bd-tw-button button\" href=\"https://www.facebook.com/nicolaus.claus.1\">\n                <span className=\"icon\">\n                    <i className=\"fab fa-facebook-square\"></i>\n                </span>\n              <span>\n                Facebook\n              </span>\n            </a>\n          </p>\n          <p className=\"control\">\n            <a className=\"button is-primary\" href=\"\">\n              <span className=\"icon\">\n              <i class=\"fas fa-candy-cane\"></i>\n              </span>\n              <span>Deck the Halls!</span>\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  </div>\n</nav>\n        )\n};\n\nexport default Navbar","import React from \"react\";\n\nconst Jumbotron = () => {\n    return(\n        <section className=\"hero is-primary is-medium\">\n        <div className=\"hero-body\">\n          <div className=\"container\">\n            <h1 className=\"title\">\n              Medium title\n            </h1>\n            <h2 className=\"subtitle\">\n              Medium subtitle\n            </h2>\n          </div>\n        </div>\n      </section>\n    )\n};\n\nexport default Jumbotron;","import React from \"react\";\nimport santaPic from \"../../Images/Santa.jpg\";\n\nconst Bio = () => {\n    return(\n<section className=\"hero is-danger is-large\">\n  <div className=\"hero-body\">\n    <div className=\"container\">\n\n        <div className=\"columns\">\n            <div className=\"column\">\n                <img src={santaPic} alt=\"Santa in action.\" />\n                First column\n            </div>\n            <div className=\"column\">\n                Bio Text\n            </div>\n        </div>\n\n        </div>\n  </div>\n</section>\n  )\n};\n\nexport default Bio;","var React = require('react');\nvar ReactDOM = require('react-dom');\nvar GifPlayer = require('react-gif-player');\n\nconst src = \"https://media.giphy.com/media/JqJM60q2ocmcak75Xb/giphy.gif\";\nconst still = \"https://media.giphy.com/media/JqJM60q2ocmcak75Xb/giphy_s.gif\";\n \nconst DancingSanta = () => {\n    return (\n        <GifPlayer\n          gif={src}\n          still={still}          \n        />\n      );\n  }\n\n  export default DancingSanta;","var React = require('react');\nvar ReactDOM = require('react-dom');\nvar GifPlayer = require('react-gif-player');\n\nconst src = \"https://media.giphy.com/media/ge3SRkPgNdAMmiSAaQ/giphy.gif\";\nconst still = \"https://media.giphy.com/media/ge3SRkPgNdAMmiSAaQ/giphy_s.gif\";\n \nconst LightStringOne = () => {\n    return (\n        <GifPlayer\n          gif={src}\n          still={still}          \n        />\n      );\n  }\n\n  export default LightStringOne;","var React = require('react');\nvar ReactDOM = require('react-dom');\nvar GifPlayer = require('react-gif-player');\n\nconst src = \"https://media.giphy.com/media/gH3MemPM3J5pkBPPvE/giphy.gif\";\nconst still = \"https://media.giphy.com/media/gH3MemPM3J5pkBPPvE/giphy_s.gif\";\n \nconst WinkingSanta = () => {\n    return (\n        <GifPlayer\n          gif={src}\n          still={still}          \n        />\n      );\n  }\n\n  export default WinkingSanta;","var React = require('react');\nvar ReactDOM = require('react-dom');\nvar GifPlayer = require('react-gif-player');\n\nconst src = \"https://media.giphy.com/media/QAmSUmHpQWCoUyRHMm/giphy.gif\";\nconst still = \"https://media.giphy.com/media/QAmSUmHpQWCoUyRHMm/giphy_s.gif\";\n \nconst ShakingBellsOne = () => {\n    return (\n        <GifPlayer\n          gif={src}\n          still={still}          \n        />\n      );\n  }\n\n  export default ShakingBellsOne;","var React = require('react');\nvar ReactDOM = require('react-dom');\nvar GifPlayer = require('react-gif-player');\n\nconst src = \"https://media.giphy.com/media/KxaxguYxaf419SdwuP/giphy.gif\";\nconst still = \"https://media.giphy.com/media/KxaxguYxaf419SdwuP/giphy_s.gif\";\n \nconst StockingOne = () => {\n    return (\n        <GifPlayer\n          gif={src}\n          still={still}          \n        />\n      );\n  }\n\n  export default StockingOne;","import React from \"react\";\nimport DancingSanta from \"../gifComponents/dancingSanta\";\nimport LightStringOne from \"../gifComponents/lightStringOne\";\nimport WinkingSanta from \"../gifComponents/winkingSanta\";\nimport ShakingBellsOne from \"../gifComponents/shakingBellsOne\";\nimport StockingOne from \"../gifComponents/stockingOne\";\n\nconst Reviewgallery = () => {\n    return(\n<section className=\"hero is-link is-large\">\n  <div className=\"hero-body\">\n    <div className=\"container\">\n\n<div className=\"tile is-ancestor\">\n  <div className=\"tile is-vertical is-8\">\n    <div className=\"tile\">\n      <div className=\"tile is-parent is-vertical\">\n        <article className=\"tile is-child notification is-primary\">\n          <ShakingBellsOne/>        \n        </article>\n        <article className=\"tile is-child notification is-warning\">\n          <p className=\"title\">...tiles</p>\n          <p className=\"subtitle\">Bottom tile</p>\n        </article>\n      </div>\n      <div className=\"tile is-parent\">\n        <article className=\"tile is-child notification is-dark\">\n          <p className=\"title\">Middle tile</p>\n          <p className=\"subtitle\">With an image</p>\n          <figure className=\"image is-4by3\">\n            <DancingSanta/>\n          </figure>\n        </article>\n      </div>\n    </div>\n    <div className=\"tile is-parent\">\n      <article className=\"tile is-child notification is-danger\">\n        <LightStringOne/>\n        <WinkingSanta/>\n      </article>\n    </div>\n  </div>\n  <div className=\"tile is-parent\">\n    <article className=\"tile is-child notification is-success\">\n      <div className=\"content\">\n        <p className=\"title\">Tall tile</p>\n        <p className=\"subtitle\">With even more content</p>\n        <div className=\"content\">\n          <StockingOne/>\n        </div>\n      </div>\n    </article>\n  </div>\n</div>\n\n    </div>\n  </div>\n</section>    )\n};\n\nexport default Reviewgallery;","import React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport Bio from \"../components/Bio\";\nimport ReviewGallery from \"../components/Reviewgallery\";\n\nconst Main = () => {\n        return(\n            <div>\n            <Navbar/>\n            <Jumbotron/>\n            <Bio/>\n            <ReviewGallery/>\n            </div>\n        )\n};\n\nexport default Main;","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\n\r\nclass Schedule extends React.Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Navbar/>\r\n            </div>\r\n        )\r\n    };\r\n};\r\n\r\nexport default Schedule;","import React from 'react';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\nimport './index.css';\nimport Main from \"./pages/Main\";\nimport Schedule from \"./pages/Schedule\";\n\nclass App extends React.Component {\n  render(){\n    return (\n    <Router>\n      <Route exact path=\"/\" component={Main}/>\n      <Route exact path=\"/schedule\" component={Schedule}/>\n    </Router>\n    )\n  };\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}